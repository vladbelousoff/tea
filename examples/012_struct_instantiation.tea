// Struct definition
struct Point {
    x: float;
    y: float;
}

// Struct with multiple fields
struct Person {
    age: int;
    height: float;
}

// Struct with no fields
struct Empty {
}

// Function that creates and returns a Point
fn create_point() -> Point {
    let point = new Point {x: 10, y: 20};
    return point;
}

// Function that creates a Person
fn create_person() -> Person {
    let person = new Person {
        age: 25,
        height: 175.5,
    };
    return person;
}

// Function that creates a Point with trailing comma
fn create_point_with_trailing_comma() -> Point {
    let point = new Point {
        x: 15,
        y: 30,
    };
    return point;
}

// Function that uses struct instantiation in expressions
fn calculate_distance() -> float {
    let p1 = new Point {x: 0, y: 0};
    let p2 = new Point {x: 3, y: 4};
    // In a real implementation, you would calculate distance here
    return 5.0;
}

// Function that creates an empty struct
fn create_empty() -> Empty {
    return new Empty {};
}

create_point();
create_point_with_trailing_comma();
calculate_distance();
create_empty();